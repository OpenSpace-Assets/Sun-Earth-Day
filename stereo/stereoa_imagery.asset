local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./stereoa')



if not StereoAImageryDataPath then
    openspace.printError("Trying to add STEREO A imagery, but 'StereoAImageryDataPath' was not defined")
    return
end

local transferfunctions = asset.syncedResource({
    Name = "STEREO Transfer Functions",
    Type = "HttpSynchronization",
    Identifier = "sun_earth_event-stereo_transferfunctions",
    Version = 1
})

local STEREOAImageryEUV = {
    Identifier = "SolarImagery_Stereo_StereoA_Image_EUV",
    Parent = transforms.Stereo_A.Identifier,
    Renderable = {
        Type = "RenderableSolarImagery",
        -- Will recursively find all instruments with .jp2 or .j2k extension
        RootPath = StereoAImageryDataPath,
        StartGamma = 1.75,
        StartResolutionLevel = 1,
        StartInstrument = "SECCHI_EUVI_304",
        TransferfunctionPath = transferfunctions .. "/SECCHI_EUVI_304.txt"
    },
    GUI = {
        Name = "StereoImagery Stereo Stereo A Image EUV",
        Path = "/Solar System/Missions/Stereo"
    }
}

local STEREOAImageryCOR = {
    Identifier = "SolarImagery_Stereo_StereoA_Image_COR",
    Parent = transforms.Stereo_A.Identifier,
    Renderable = {
        Type = "RenderableSolarImagery",
        -- Will recursively find all instruments with .jp2 or .j2k extension
        RootPath = StereoAImageryDataPath,
        StartResolutionLevel = 1,
        Offset = 0.00001,
        StartInstrument = "SECCHI_COR2_white-light",
        TransferfunctionPath = transferfunctions .. "/SECCHI_COR1_white-light.txt"
    },
    GUI = {
        Name = "SolarImagery Stereo Stereo A Image COR",
        Path = "/Solar System/Missions/Stereo"
    }
}



local objects = { STEREOAImageryEUV, STEREOAImageryCOR }
assetHelper.registerSceneGraphNodesAndExport(asset, objects)
