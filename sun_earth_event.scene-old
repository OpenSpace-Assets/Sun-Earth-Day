function preInitialization()
    --[[
    The scripts in this function are executed after the scene is loaded but before the
    scene elements have been initialized, thus they should be used to set the time at
    which the scene should start and other settings that might determine initialization
    critical objects.
    ]]--

    openspace.spice.loadKernel("${SPICE}/naif0012.tls")
    openspace.spice.loadKernel("${SPICE}/pck00010.tpc")

  --  openspace.time.setTime(openspace.time.currentWallTime())
    openspace.time.setTime("2012 JUL 01 00:00:00.000")
    --dofile(openspace.absPath('${SCRIPTS}/bind_common_keys.lua'))
    dofile(openspace.absPath('${SCRIPTS}/sun_earth_event.lua'))

end

function postInitialization()
    --[[
    The scripts in this function are executed after all objects in the scene have been
    created and initialized, but before the first render call. This is the place to set
    graphical settings for the renderables.
    ]]--
    openspace.printInfo("Setting default values")
    openspace.setPropertyValue("Sun.renderable.enabled", true)
    openspace.setPropertyValue("SunMarker.renderable.enabled", false)
    openspace.setPropertyValue("SunGlare.renderable.enabled", false)
    openspace.setPropertyValue("EarthMarker.renderable.enabled", false)
    openspace.setPropertyValue("Constellation Bounds.renderable.enabled", false)

    openspace.setPropertyValue("MilkyWay.renderable.transparency", 0.25)
    openspace.setPropertyValue("MilkyWay.renderable.segments", 50)

    -- GEOSYNC STUFF
    openspace.setPropertyValue("geo*.renderable.enabled", false)
    openspace.setPropertyValue("geo_GOES*.renderable.enabled", true)
    openspace.setPropertyValue("geo_GOES_*_trail.renderable.lineFade", 0.6)

    --openspace.setPropertyValue("geo_GOES_13_trail.renderable.lineColor" {0.6, 0.0, 1.0})


    --openspace.setPropertyValue("geo_GOES_*_trail.renderable.lineColor", {0.6, 0.0, 1.0})

    -- ========================================================== SOLARBROWSING BEGIN ==================================================
    -- =================================================================================================================================
    -- =================================================================================================================================
    openspace.setPropertyValue("SolarImagery_*_Marker.renderable.enabled", false)
    openspace.setPropertyValue("SolarImagery_*_Trail.renderable.enabled", false)
    openspace.setPropertyValue("SolarImagery_EarthMarker_Marker.renderable.enabled", true)

    -- Enable SDO, stereo by default
    openspace.setPropertyValue("SolarImagery_SDO_Image_AIA.renderable.enabled", true);
    openspace.setPropertyValue("SolarImagery_Stereo_StereoA_Image_EUV.renderable.enabled", true);
    openspace.setPropertyValue("SolarImagery_Stereo_StereoB_Image_EUV.renderable.enabled", true);
    openspace.setPropertyValue('SolarImagery_*_Image*.renderable.planeOpacity', 0)
    -- Set plane opacity to 0

    -- DEFAULT ENLIL
    -- openspace.setPropertyValue("FL_ENLIL*.renderable.Color.fieldlineColorQuantity", 1)
    -- -- openspace.setPropertyValue("FL_ENLIL*.renderable.Color.transferFunctionPath", 'X:/CCMC/fieldlinesdata/colortables/kroyw.txt')
    -- openspace.setPropertyValue("FL_ENLIL*.renderable.Color.transferFunctionLimit1", '150')
    -- openspace.setPropertyValue("FL_ENLIL*.renderable.Color.transferFunctionLimit2", '1050')
    -- openspace.setPropertyValue("FL*.renderable.enabled", false)

    openspace.setPropertyValue("SolarImagery_ACE_Marker.renderable.enabled", false)

    -- GDAL
    --openspace.setPropertyValueSingle('Global Properties.GlobeBrowsing.GdalWrapper.logGdalErrors', false);

    -- Loops
    openspace.addVirtualProperty("BoolProperty", "Activate Looping", "Sun_Projection.renderable.activateLooping", false, nil, nil)
    openspace.addVirtualProperty("IntProperty",  "Loop Id", "Sun_Projection.renderable.loopId", 0, 0, 9)

    -- Display Frustums
    openspace.addVirtualProperty("BoolProperty", "Display Frustums", "SolarImagery_*_Image*.renderable.enableFrustum", false, nil, nil)
    -- Display Markers
    openspace.addVirtualProperty("BoolProperty", "Display Markers", "SolarImagery_*_Marker.renderable.enabled", true, nil, nil)

    openspace.addVirtualProperty("FloatProperty", "Plane Opacity", "SolarImagery*.renderable.planeOpacity", 1.0, 0.0, 1.0)
    openspace.addVirtualProperty("BoolProperty",  "Verbose All Planes", "SolarImagery*.renderable.verboseMode", false, nil, nil)
    openspace.addVirtualProperty("FloatProperty", "Move Factor", "SolarImagery*.renderable.moveFactor", 0.9, 0.0, 1.0)
    openspace.addVirtualProperty("IntProperty",   "Update Interval", "SolarImagery*.renderable.minRealTimeUpdateInterval", 65, 0, 1000)

       -- ===================================================== STEREO A & B ============================================================
    -- Stereo Orbits
    openspace.addVirtualProperty("BoolProperty",  "Stereo Orbits", "SolarImagery_Stereo_O*.renderable.enabled", false, nil, nil)
    -- Stereo Labels
    openspace.addVirtualProperty("BoolProperty",  "Stereo Labels", "SolarImagery_Stereo_L*.renderable.enabled", false, nil, nil)
    -- Stereo Frustums
    openspace.addVirtualProperty("BoolProperty",  "Stereo Frustums", "SolarImagery_Stereo_*_Image_*.renderable.enableFrustum", false, nil, nil)
    -- Stereo A
    openspace.addVirtualProperty("BoolProperty",  "Stereo A EUV", "SolarImagery_Stereo_StereoA_Image_EUV.renderable.enabled", false, nil, nil)
    openspace.addVirtualProperty("BoolProperty",  "Stereo A COR2",  "SolarImagery_Stereo_StereoA_Image_COR.renderable.enabled", false, nil, nil)
    -- Stereo B
    openspace.addVirtualProperty("BoolProperty",  "Stereo B EUV", "SolarImagery_Stereo_StereoB_Image_EUV.renderable.enabled", false, nil, nil)
    openspace.addVirtualProperty("BoolProperty",  "Stereo B COR2", "SolarImagery_Stereo_StereoB_Image_COR.renderable.enabled", false, nil, nil)

       -- ======================================================= SDO ===================================================================
    -- SDO Orbit
    openspace.addVirtualProperty("BoolProperty",  "SDO Orbit",   "SolarImagery_SDO_Trail.renderable.enabled", false, nil, nil)
    -- SDO Label
    openspace.addVirtualProperty("BoolProperty",  "SDO Label", "SolarImagery_SDO_Marker.renderable.enabled", false, nil, nil)
    -- SDO Frustum
    openspace.addVirtualProperty("BoolProperty",  "SDO Frustum", "SolarImagery_SDO_Image_AIA.renderable.enableFrustum", false, nil, nil)
    -- SDO
    openspace.addVirtualProperty("BoolProperty",  "SDO",   "SolarImagery_SDO_Image*.renderable.enabled", false, nil, nil)

    -- ========================================================== SOHO ===================================================================
    -- Soho Orbit
    openspace.addVirtualProperty("BoolProperty",  "SOHO Orbit",   "SolarImagery_Soho_Trail.renderable.enabled", false, nil, nil)
    -- Soho Label
    openspace.addVirtualProperty("BoolProperty",  "SOHO Label",   "SolarImagery_Soho_Marker.renderable.enabled", false, nil, nil)
    -- Soho Frustum
    openspace.addVirtualProperty("BoolProperty",  "SOHO Frustum",   "SolarImagery_Soho_Image_*.renderable.enableFrustum", false, nil, nil)
    -- SOHO
    openspace.addVirtualProperty("BoolProperty",  "SOHO C2", "SolarImagery_Soho_Image_C2.renderable.enabled", false, nil, nil)
    openspace.addVirtualProperty("BoolProperty",  "SOHO C3", "SolarImagery_Soho_Image_C3.renderable.enabled", false, nil, nil)

    -- EARTH Label
    openspace.addVirtualProperty("BoolProperty",  "Earth Label",   "SolarImagery_EarthMarker_Marker.renderable.enabled", true, nil, nil)

    -- ACE Label
    openspace.addVirtualProperty("BoolProperty", "ACE Label", "SolarImagery_ACE_Marker.renderable.enabled", false, nil, nil)
    -- ========================================================== SOLARBROWSING END ==================================================
    -- =================================================================================================================================
    -- =================================================================================================================================

    -- FIELD LINE VIRTUAL PROPERTIES
    -- ------------------------------ ENLIL ---------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL ALL",   "FL_ENLIL*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL SLICES",   "FL_ENLIL_slice*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL LAT4",   "FL_ENLIL_slice_lat*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL EQ_PLANE",   "FL_ENLIL_slice_eq*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL EARTH",   "FL_ENLIL_earth*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "ENLIL STEREOA",   "FL_ENLIL_stereoa*.renderable.enabled", false, nil, nil)
    -- --- SET COLOR METHOD ON ENLIL SLICES AND STEREOA/EARTH LINES
    -- openspace.addVirtualProperty("IntProperty",  "ENLIL SlicesColorMethod",   "FL_ENLIL_slice*.renderable.Color.fieldlineColorMethod", 1,0,1)
    -- openspace.addVirtualProperty("IntProperty",  "ENLIL EarthColorMethod",   "FL_ENLIL_earth*.renderable.Color.fieldlineColorMethod", 1,0,1)


    -- openspace.setPropertyValue("FL_ENLIL_earth*.renderable.Particles.fieldlineParticleColor", {1,1,1,1.0})
    -- openspace.setPropertyValue("FL_ENLIL_earth*.renderable.Particles.fieldlineParticleSize", 5)
    -- openspace.setPropertyValue("FL_ENLIL_earth*.renderable.Particles.fieldlineParticleFrequency", 25)
    -- openspace.setPropertyValue("FL_ENLIL_earth*.renderable.Particles.fieldlineParticleSpeed", 25000000)
    -- openspace.setPropertyValue("FL_ENLIL_earth*.renderable.Particles.flipParticleDir", true)

    ----------------------------- ARTIFICIAL BATSRUS, TEMPERATURE MOVIE----------------------------------------

    -- openspace.addVirtualProperty("BoolProperty", "Artificial Temperature Run", "FL_BATSRUS_Artificial_OpenClosed*.renderable.enabled", false, nil, nil)

    -- ----------------------------- ARTIFICIAL BATSRUS, SINGLE TIMESTEP----------------------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats",   "FL_BATSRUS_Artificial_Single*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats OpenClosed",   "FL_BATSRUS_Artificial_SingleStepOpen*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats FlowLines",   "FL_BATSRUS_Artificial_SingleStepFlow*.renderable.enabled", false, nil, nil)
    -- -- openspace.addVirtualProperty("IntProperty",   "Artificial Bats ColorVar", "FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimit.unitInterestRange", 0, 0, 3)

    --     -- BATSRUS ARTIFICIAL
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Color.fieldlineColorQuantity", 3)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.showParticles", true)

    -- -- particles
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleFrequency", 19)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleSpeed", 18500000)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleSize", 25)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.12})

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleSize", 2)



    -- openspace.addVirtualProperty("BoolProperty",  "Double Bats",   "FL_BATSRUS_Artificial_DT*.renderable.enabled", false, nil, nil)


    ------ TODO ADD TEMPERATURE FOR OPENCLOSED For MODEL RUN... START AT 5.34 and end at 9.00, slower


    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.showParticles", true)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 1.0})
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.5})

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleFrequency", 9)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleFrequency", 54)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSize", 2)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSpeed", 15000000)


    -- ---------------------PFSS------------------------- particles
    -- openspace.setPropertyValue("FL_PFSS.renderable.Particles.fieldlineParticleFrequency", 100)
    -- openspace.setPropertyValue("FL_PFSS.renderable.Particles.fieldlineParticleSpeed", 30000000)
    -- openspace.setPropertyValue("FL_PFSS.renderable.Particles.fieldlineParticleSize", 9)
    -- openspace.setPropertyValue("FL_PFSS.renderable.Particles.fieldlineParticleColor", {1, 0.9, 1, 0.74})
    -- openspace.setPropertyValue("FL_PFSS.renderable.Color.fieldlineColorMethod", 0)
    -- openspace.setPropertyValue("FL_PFSS.renderable.enabled", false)
    -----------------------------------------------------------


    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleFrequency", 20)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleSize", 2)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleSpeed", 30000)
    -- openspace
    -- renderable.Particles.fieldlineParticleFrequency
    -- renderable.Particles.fieldlineParticleSize
    -- renderable.Particles.fieldlineParticleSpeed
    -- renderable.Particles.fieldlineParticleColor
    -- renderable.Particles.fieldlineFlipParticleDir
    -- renderable.Particles.showParticlesf
    -- renderable.DomainLimits.unitInterestRange
    -- renderable.DomainLimits.fieldlineDomainQuantity



    ---------------------------------------------- BATSRUS ------------------------------------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "BATSRSUS ALL",   "FL_BATSRUS_J12*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus FlowlinesL",   "FL_BATSRUS_J12_Flo*.renderable.enabled", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus OpenClosed",   "FL_BATSRUS_J12_Ope*.renderable.enabled", false, nil, nil)
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.fieldlineDomainQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColorQuantity", 3) -- Velocity
    -- openspace.setPropertyValue("FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColor", {1,1,1,0.4})

    openspace.resetCameraDirection()

    openspace.printInfo("Done setting default values")
end

-- Define locals
solarImageryDataRootPath = "C:/Users/apembrok/Documents/2017_thesis_OpenSpace_data/solarbrowsingdata"

return {
    ScenePath = ".",
    CommonFolder = "common",
    Camera = {
        Focus = "Sun",
        Position = {505370268486.696167, 1089706179272.719116, -890259148524.319458},
        Rotation = {0.250635, -0.028751, 0.879269, 0.404030},
    },
    Modules = {
        "sun",
        "sun-imagery",
        "mercury",
        "venus",
        -- "lodglobes/venus",
        "earth",
        -- "lodglobes/earth",
        "moon",
        -- "lodglobes/moon",
        --"geosatellites",
        "mars",
        -- "lodglobes/mars",
        "jupiter",
        -- "lodglobes/jupiter",
        "saturn",
        -- "lodglobes/saturn",
        -- "uranus",
        -- "neptune",
        "stars",
        -- "stars-denver",
        --"batsrussequence",
        "milkyway",
        -- "milkyway-eso",
        --"constellationbounds",
        -- "satellites",
        "missions/sdo",
        "missions/stereo-a",
        "missions/stereo-b",
        "missions/soho",
        "fieldlinessequence/customkernels/hnm_ref_frame",
        "fieldlinessequence/customkernels/gsm_ref_frame",
        "fieldlinessequence/batsrus_fl_july2012",
        "fieldlinessequence/enlil_fl_july2012",
        "fieldlinessequence/pfss_fl_july2012",
    }
}
