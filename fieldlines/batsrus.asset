local assetHelper = asset.require('util/asset_helper')
local transforms = asset.require('./transforms')
local transferFunctions = asset.require('./transferfunctions').TransferFunctions



local batsrusTemperatureColorTable = transferFunctions .. "/batsrus_temperature.txt"
local batsrusDensityColorTable = transferFunctions .. "/batsrus_density.txt"
local batsrusCurrentColorTable = transferFunctions .. "/batsrus_current2.txt"
local batsrusVelocityColorTable = transferFunctions .. "/batsrus_velocity.txt"
local batsrusTopologyColorTable = transferFunctions .. "/batsrus_topology.txt"

-- Fieldline data
if not BATSRUSPaths then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUS' table was not defined")
    return
end

local failed = false
if not BATSRUSPaths.MagneticOpenClosed then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUSPaths.MagneticOpenClosed' was not defined")
    failed = true
end
if not BATSRUSPaths.VelocityFlowlinesUpstream then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUSPaths.VelocityFlowlinesUpstream' was not defined")
    failed = true
end
if not BATSRUSPaths.VelocityFlowlinesUpstreamNew then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUSPaths.VelocityFlowlinesUpstreamNew' was not defined")
    failed = true
end
if not BATSRUSPaths.ArtificialMagnetic then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUSPaths.ArtificialMagnetic' was not defined")
    failed = true
end
if not BATSRUSPaths.ArtificialVelocityFlowlines then
    openspace.printError("Trying to add BATSRUS fieldlines, but 'BATSRUSPaths.ArtificialVelocityFlowlines' was not defined")
    failed = true
end

if failed then
    return
end

----------------------LUTZ's JULY TRACES-------------------------
local BatsrusJ12OpenClosed = {
    Identifier = "FL_BATSRUS_J12_OpenClosed",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        -- TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.MagneticOpenClosed,
        InputFileType = "osfls",
        -- StartStateOffset = 1908,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 900 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = {
            { -400, 60 },
            { -80, 80 },
            { -100, 100 }
        },
        LoadAtRuntime = true
    },
    GUI = {
        Name = "Fieldlines BATSRUS J12 Open/Closed"
    }
}

--------------------- VELOCITY FLOWLINES ------------------------

local BatsrusJ12FlowLines = {
    Identifier = "FL_BATSRUS_J12_FlowLines",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        -- TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.VelocityFlowlinesUpstream,
        InputFileType = "osfls",
        -- StartStateOffset = 650,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 900 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80, 80 }, { -100, 100 } },
        LoadAtRuntime = true
    },
    GUI = {
        Name = "Fieldlines BATSRUS J12 Flowlines"
    }
}

local BatsrusJ12FlowLinesNew = {
    Identifier = "FL_BATSRUS_J12_FlowLines_New",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        -- TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.VelocityFlowlinesUpstreamNew,
        InputFileType = "osfls",
        -- StartStateOffset = 650,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 900 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80, 80 }, { -100, 100 } },
        LoadAtRuntime = true
    },
    GUI = {
        Name = "Fieldlines BATSRUS J12 Flowlines New"
    }
}

-------------------- ARTIFICIAL RUN -------------------------
local BatsrusArtificialOpenClosed = {
    Identifier = "FL_BATSRUS_Artificial_OpenClosed",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic .. 'open-closed/',
        InputFileType = "osfls",
        -- StartStateOffset = 1080,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -32,32 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Open/Closed"
    }
}

local BatsrusArtificialThroughout = {
    Identifier = "FL_BATSRUS_Artificial_Throughout",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic .. 'throughout/',
        InputFileType = "osfls",
        -- StartStateOffset = 1080,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -32,32 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Throughout"
    }
}

local BatsrusArtificialFlowlines = {
    Identifier = "FL_BATSRUS_Artificial_FlowLines",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialVelocityFlowlines .. 'upstream/',
        InputFileType = "osfls",
        -- StartStateOffset = 1080,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 4.5 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.6 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -32,32 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Flow"
    }
}

-- ----------------------------------------SINGLE TIMESTEP-------------------------------------------------
local BatsrusArtificialSingleFlow = {
    Identifier = "FL_BATSRUS_Artificial_SingleStepFlowLines",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic..'single-timestep/',
        InputFileType = "osfls",
        -- LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 4.5 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 }
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.075 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -100,100 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Single Step Flow"
    }
}

local BatsrusArtificialSingleOpenClosed = {
    Identifier = "FL_BATSRUS_Artificial_SingleStepOpenClosed",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic..'single-timestep/',
        InputFileType = "osfls",
        -- LoadBinariesAtRuntime = true,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 4.5 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 }
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.4 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -100,100 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Single Step Open/Closed"
    }
}

-- --------------------------------------------------------------------------------------------------------
-- -----------------------------------------------DOUBLE TIMESTEP---------------------------------------------------------
local BatsrusArtificialDoubleOpenClosed ={
    Identifier = "FL_BATSRUS_Artificial_DTimeStep-OpenClosed",
    Parent = transforms.GSMReferenceFrame.Identifier,
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic..'double-timestep/open-closed/',
        InputFileType = "osfls",
        -- StartStateOffset = 1080,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = false,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.18 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -80,80 }, { -32,32 } }
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artificial Double Open/Closed",
    }
}

local BatsrusArtificialDoubleThroughout = {
    Identifier = "FL_BATSRUS_Artificial_DTimeStep-throughout",
    Parent = "GSMReferenceFrame",
    Renderable = {
        Type = "RenderableFieldlinesSequence",
        TracingMethod = "PreTracedBinary",
        SourceFolder = BATSRUSPaths.ArtificialMagnetic..'double-timestep/throughout/',
        InputFileType = "osfls",
        -- StartStateOffset = 1080,
        -- StateStepSize = 100,
        -- MaxNumStates = 12,
        LoadBinariesAtRuntime = false,
        ColorTablePaths = {
            batsrusTemperatureColorTable,
            batsrusDensityColorTable,
            batsrusCurrentColorTable,
            batsrusVelocityColorTable,
            batsrusTopologyColorTable,
        },
        ColorTableMinMax = {
            { 0, 100000000 },
            { 0, 60 },
            { -0.015, 0.015 },
            { 150, 550 },
            { 0, 3 },
        },
        ExtraMinMaxLimits = {
            { 0, 1000000000 },
            { -1, 150 },
            { -0.2, 0.2 },
            { 0, 6000 },
            { 0, 3 },
        },
        DefaultColor = { 0.7, 0.4, 0.0, 0.33 },
        RadialDomainLimits = { 0, 350 },
        CartesianDomainLimits = { { -400, 60 }, { -70,70 }, {- 32,32 }},
    },
    GUI = {
        Name = "Fieldlines BATSRUS Artifical Double Throughout"
    }
}

local objects = {
    BatsrusJ12OpenClosed,
    BatsrusJ12FlowLines,
    BatsrusJ12FlowLinesNew,
    BatsrusArtificialOpenClosed,
    BatsrusArtificialFlowlines,
    BatsrusArtificialThroughout,
    BatsrusArtificialSingleFlow,
    BatsrusArtificialSingleOpenClosed,
    -- BatsrusArtificialDoubleOpenClosed,
    -- BatsrusArtificialDoubleThroughout
}
local init, deinit = assetHelper.registrationFunctions(asset, objects)

asset.onInitialize(function ()
    init()

    -- init()
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Color.colorMethod", 1) -- Color by Quantity
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Color.colorQuantity", 4) -- Topology
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Domain.limitsY", { -30.61, 30.61 })
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Domain.limitsY", { -30.61, 30.61 })
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.maskingEnabled", true)
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Masking.maskingQuantity", 4) -- Topology
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Masking.maskingMinLimit", "2.5")
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_OpenClosed.renderable.Masking.maskingMaxLimit", "3.0")

    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Color.colorMethod", 1) -- Color by Quantity
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Color.colorQuantity", 3) -- Velocity
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Color.colorQuantityMin", "75")
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Color.colorQuantityMax", "350")
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Color.uniform", { 1, 1, 1, 0.12 })
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Flow.particleSize", 2)
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Flow.particleSize", 2)
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Flow.particleSpacing", 60)
    openspace.setPropertyValueSingle("Scene.FL_BATSRUS_J12_FlowLines.renderable.Flow.speed", 20)


    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Masking.maskingQuantity", 4)
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Masking.maskingMinLimit", "2.5")
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Masking.maskingMaxLimit", "3.0")
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Color.colorMethod", 1) -- Color by Quantity
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Color.colorQuantity", 4)

    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Color.colorMethod", 1) -- Color by Quantity
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Color.colorQuantity", 3)
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.flowEnabled", true)

    -- particles
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStep*.renderable.Flow.particleSpacing", 19)
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStep*.renderable.Flow.speed", 18.5)

    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Flow.particleSize", 25)
    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Flow.color", { 1, 1, 0, 0.12 })

    openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Flow.particleSize", 2)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.showParticles", true)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.Masking.maskingQuantity", 4)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Flow.color", {1, 1, 0, 1.0})
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Flow.color", {1, 1, 0, 0.5})

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Flow.particleSpacing", 9)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Flow.particleSpacing", 54)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep*.renderable.Flow.particleSize", 2)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep*.renderable.Flow.speed", 15)




    -- These are the original values, before I updated the property names to match the new names (abock)
    --         -- BATSRUS ARTIFICIAL
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Color.fieldlineColorQuantity", 3)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.showParticles", true)

    -- -- particles
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleFrequency", 19)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleSpeed", 18500000)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleSize", 25)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.12})

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleSize", 2)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.showParticles", true)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DT*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 1.0})
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.5})

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleFrequency", 9)
    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleFrequency", 54)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSize", 2)

    -- openspace.setPropertyValue("FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSpeed", 15000000)


    -- ---------------------------------------------- BATSRUS ------------------------------------------------------
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.fieldlineDomainQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColorQuantity", 3) -- Velocity
    -- openspace.setPropertyValue("FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColor", {1,1,1,0.4})


    -- ----------------------------- ARTIFICIAL BATSRUS, TEMPERATURE MOVIE----------------------------------------
    -- openspace.addVirtualProperty("BoolProperty", "Artificial Temperature Run", "FL_BATSRUS_Artificial_OpenClosed*.renderable.Enabled", "", false, nil, nil)

    -- -- ----------------------------- ARTIFICIAL BATSRUS, SINGLE TIMESTEP----------------------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats",   "FL_BATSRUS_Artificial_Single*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats OpenClosed",   "FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats FlowLines",   "FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Enabled", "", false, nil, nil)

    -- openspace.addVirtualProperty("BoolProperty",  "Double Bats",   "FL_BATSRUS_Artificial_DT*.renderable.Enabled", "", false, nil, nil)

    -- -- ---------------------------------------------- BATSRUS ------------------------------------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "BATSRSUS ALL",   "FL_BATSRUS_J12*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus FlowlinesL",   "FL_BATSRUS_J12_Flo*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus OpenClosed",   "FL_BATSRUS_J12_Ope*.renderable.Enabled", "", false, nil, nil)

            -- BATSRUS ARTIFICIAL
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Color.fieldlineColorQuantity", 3)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.showParticles", true)

    -- -- particles
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleFrequency", 19)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStep*.renderable.Particles.fieldlineParticleSpeed", 18500000)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleSize", 25)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.12})

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Particles.fieldlineParticleSize", 2)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.showParticles", true)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.DomainLimits.fieldlineDomainQuantity", 4)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DT*.renderable.Color.fieldlineColorQuantity", 4)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 1.0})
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleColor", {1, 1, 0, 0.5})

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-throughout*.renderable.Particles.fieldlineParticleFrequency", 9)
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep-Open*.renderable.Particles.fieldlineParticleFrequency", 54)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSize", 2)

    -- openspace.setPropertyValue("Scene.FL_BATSRUS_Artificial_DTimeStep*.renderable.Particles.fieldlineParticleSpeed", 15000000)


    ---------------------------------------------- BATSRUS ------------------------------------------------------
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.fieldlineDomainQuantity", 4) -- Topology
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_J12_OpenClosed*.renderable.DomainLimits.unitInterestRange", {2.5, 3.0})
    -- openspace.setPropertyValue("FL_BATSRUS_J12_OpenClosed*.renderable.Color.fieldlineColorQuantity", 4) -- Topology
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColorQuantity", 3) -- Velocity
    -- openspace.setPropertyValue("Scene.FL_BATSRUS_J12_FlowLines*.renderable.Color.fieldlineColor", {1,1,1,0.4})


    ----------------------------- ARTIFICIAL BATSRUS, TEMPERATURE MOVIE----------------------------------------
    -- openspace.addVirtualProperty("BoolProperty", "Artificial Temperature Run", "Scene.FL_BATSRUS_Artificial_OpenClosed*.renderable.Enabled", "", false, nil, nil)

    -- ----------------------------- ARTIFICIAL BATSRUS, SINGLE TIMESTEP----------------------------------------
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats",   "Scene.FL_BATSRUS_Artificial_Single*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats OpenClosed",   "Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Single Bats FlowLines",   "Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.Enabled", "", false, nil, nil)

    -- openspace.addVirtualProperty("BoolProperty",  "Double Bats",   "Scene.FL_BATSRUS_Artificial_DT*.renderable.Enabled", "", false, nil, nil)

    -- ---------------------------------------------- BATSRUS ------------------------------------------------------

    -- openspace.addVirtualProperty("BoolProperty",  "BATSRSUS ALL",   "Scene.FL_BATSRUS_J12*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus FlowlinesL",   "Scene.FL_BATSRUS_J12_Flo*.renderable.Enabled", "", false, nil, nil)
    -- openspace.addVirtualProperty("BoolProperty",  "Batsrus OpenClosed",   "Scene.FL_BATSRUS_J12_Ope*.renderable.Enabled", "", false, nil, nil)
end)

asset.onDeinitialize(function ()
    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_Artificial_OpenClosed*.renderable.enabled");

    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_Artificial_Single*.renderable.enabled");
    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_Artificial_SingleStepOpen*.renderable.enabled");
    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_Artificial_SingleStepFlow*.renderable.enabled");

    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_Artificial_DT*.renderable.enabled")

    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_J12*.renderable.enabled")
    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_J12_Flo*.renderable.enabled")
    -- openspace.removeVirtualProperty("Scene.FL_BATSRUS_J12_Ope*.renderable.enabled")

    deinit()
end)
